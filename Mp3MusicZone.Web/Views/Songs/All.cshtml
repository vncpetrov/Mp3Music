@model SearchViewModel<PaginatedViewModel<SongListingViewModel>>

@{
    ViewData["Title"] = "Songs";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="jumbotron">
                <h3 class="heading">All Songs</h3>
                <hr />

                <partial name="~/Views/Shared/_Search.cshtml"
                         model="Model" />

                @if (Model.DecoratedModel.Items.Count() == 0)
                {
                    <div class="no-match">
                        Your search did not match any songs.
                    </div>
                }
                else
                {
                    <partial name="~/Views/Songs/_SongListing.cshtml"
                             model="Model.DecoratedModel.Items" />

                    @(await Component.InvokeAsync<PaginationComponent>(
                        new
                        {
                            pageInfo = Model.DecoratedModel,
                            searchTerm = Model.SearchTerm
                        }))
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}